(deflisten workspaces :initial "[]" "~/.config/eww/scripts/get-workspaces.sh")
(deflisten current_workspace :initial "1" "~/.config/eww/scripts/get-active-workspace.sh")
(deflisten active_window :initial "1" "~/.config/eww/scripts/get-active-window.sh")

(defpoll sound :initial `{"svolume": 100, "sicon": "./assets/volume.png", "mvolume": 100, "micon": "./assets/mic-volume.png"}` :interval "1s" "~/.config/eww/scripts/get-sound.sh")

(defpoll weather :interval "600s" "~/.config/eww/scripts/weather.sh")

(deflisten notifications :initial `{ "text": "0", "alt": "none", "tooltip": "", "class": "none" }` "swaync-client -swb")
(defpoll brightness :initial "100" :interval "1s" "~/.config/eww/scripts/get-brightness.sh")
(defpoll tvStatus :initial `off` :interval "1s" "~/.config/eww/scripts/tv-status.sh")
(defvar procEntry 0)
(defpoll proc :initial "[]" :interval "1s" "~/.config/eww/scripts/get-processes.sh")
(defpoll timezones :initial "[]" :interval "1s" "~/.config/eww/scripts/get-timezones.sh")


(defvar showAudio false)
(defvar colorMode "dark")
(defvar showMic false)
(defvar showBrightness false)

(defpoll system :initial "thelxinoe" :interval "60s" "hostname")

(include "/home/evie/.config/eww-extras/mail-calendar-vars.yuck")

(defwidget workspaces []
  (eventbox :onscroll "~/.config/eww/scripts/change-active-workspace.sh {} ${current_workspace}" :class "workspaces-widget"
    (box :space-evenly true
	 :class "box"
      (label :text "${workspaces}${current_workspace}" :visible false)

      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor ${workspace.id}"
          (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :text "${workspace.id}" :class "workspace-label" :width 3)
            )))
      )
    )
  )

(defwidget active-window []
	   (box
	    :halign "center"
	    :hexpand false
	    :class "active-window box"
	    (button
	       :onclick "hyprctl dispatch hycov:toggleoverview"
	      (label
	       :width 150
	       :limit-width 15
	       :halign "start"
	       :show-truncated false
	       :text `${replace(replace(replace(active_window, '"', ''), 'org.qutebrowser.', ''), 'org.wezfurlong.', '')}`))))

(defwidget monitor [monitor-text monitor-icon monitor-width ?monitor-class ?monitor-click ?monitor-rclick ?monitor-tooltip ?monitor-middleclick ?monitor-visible]
	   (button
	    :onclick monitor-click
	    :onrightclick monitor-rclick
	    :onmiddleclick monitor-middleclick
	    :visible {monitor-visible != false }
	    (box
	     :class "monitor ${monitor-class}"
	     :halign "start"
	     :hexpand false
	     :space-evenly false
	     (image
	      :path monitor-icon
	      :class "monitor-image"
	      :image-width 20
	      :image-height 20)
	     (label
	      :xalign 0
	      :text monitor-text
	      :tooltip "${monitor-tooltip}"
	      :limit-width monitor-width
	      :show-truncated false
	      :width "${monitor-text == "" ? 0 : monitor-width * 10}"
	      ))))

(defwidget media []
	   (box
	    :class "audio-box box"
	    :halign "start"
	    :orientation "horizontal"
	    :space-evenly false

	    (eventbox
	     :onhover "eww update showAudio=true"
	     :onhoverlost "eww update showAudio=false"
	       (box
	         :halign "start"
	         :orientation "horizontal"
	         :space-evenly false
	           (button
	            :class "audio-button"
	            :onclick "amixer set Master toggle"
	            (image
	             :path "${sound.sicon}"
	             :image-width 20
	             :image-height 20))
	           (revealer
	            :transition "slideright"
	            :reveal showAudio
	               (scale
	                :class "audio-scale"
	                :hexpand true
	                :width 80
	                :value "${sound.svolume}"
	                :tooltip "${sound.svolume}"
	                :min 0
	                :max 101
	                :onchange "amixer -Mq set Master,0 {}% unmute")
	           )))

	    (eventbox
	     :onhover "eww update showMic=true"
	     :onhoverlost "eww update showMic=false"
	       (box
	         :halign "start"
	         :orientation "horizontal"
	         :space-evenly false
	         :class "left-spacing"
	           (button
	            :class "audio-button"
	            :onclick "amixer set Capture toggle"
	            (image
	             :path "${sound.micon}"
	             :image-width 20
	             :image-height 20))
	       (revealer
	        :transition "slideright"
	        :reveal showMic
	           (scale
	            :class "audio-scale"
	            :hexpand true
	            :width 80
	            :value "${sound.mvolume}"
	            :tooltip "${sound.mvolume}"
	            :min 0
	            :max 101
	            :onchange "amixer -Mq set Capture,0 {}% unmute"))
	       ))

	    (eventbox
	     :onhover "eww update showBrightness=true"
	     :onhoverlost "eww update showBrightness=false"
	     :visible { system != "thelxinoe" }
	       (box
	         :halign "start"
	         :orientation "horizontal"
	         :space-evenly false
	         :class "left-spacing"
	           (image
	            :path "./assets/brightness.png"
	            :image-width 20
	            :image-height 20)
	           (revealer
	            :transition "slideright"
	            :reveal showBrightness
	               (scale
	                :class "audio-scale"
	                :hexpand true
	                :width 80
	                :value "${brightness}"
	                :tooltip "${brightness}"
	                :min 1
	                :max 101
	                :onchange "sudo light -S {}")
	           )))

	    ))

(defwidget timezone-widget []
	    (box
	     :orientation "vertical"
	     :valign "end"
	     :vexpand true
             (for other in timezones
		  (box
		     :class "line"
		     :hexpand true
		    (label
		     :text "${other.name}"
	             :halign "start"
		     :hexpand true
	             :limit-width 11
	             :show-truncated false
	             :width 110)
		    (label
		     :text "${other.time}"
	             :halign "end"
	             :limit-width 8
	             :show-truncated false
	             :width 80)))))

(defwidget system-time []
	   (box
	    :hexpand true
	    :halign "end"
	    :class "system-time box"
	     (button
	      :onclick "eww open cal --toggle"
	      (label :text "${formattime(EWW_TIME, '%a, %d %b %T')}")
	      )))

(defwidget cal-widget []
	   (calendar
	    :width 200
	    :class "cal-box cal-box-${colorMode}"
	    :onclick "~/.config/eww/scripts/copy-dates.sh {0} {1} {2}")
	   )

(defwidget events-widget []
	   (box
	    :class "events-box events-box-${colorMode}"
	    :orientation "v"
	    :space-evenly true
	    (for event in events
		 (box
		  :orientation "h"
		  :space-evenly false
	          :class "line"
		  (label
		   :xalign 0
		   :limit-width 13
		   :width 130
		   :text "${event.date}")
		  (label
		   :xalign 0
		   :limit-width 8
		   :width 70
		   :text "⟨${event.duration}m⟩")
		  (label
		   :xalign 0
		   :limit-width 7
		   :width 70
		   :text "${event.time}")
			(label
			 :xalign 0
			 :limit-width 30
			 :width 150
			 :text "[${event.source}]")
		  (label
		   :xalign 0
		   :limit-width 30
		   :width 300
		   :text "${event.title}")))))

(defwidget cpu-widget []
	   (box
	    :class "cpu-box cpu-box-${colorMode}"
	    :orientation "v"
	     (box
	     :class "cpu-box-i"
	     :orientation "v"
	       (box
	       :orientation "h"
		     :space-evenly false
	       :class "cpu-line header"
	         (label :text "% cpu"
	                :xalign 0
			:width 100)
	         (label :text "% mem"
	                :xalign 0
			:width 100)
	         (label :text "user"
	                :xalign 0
			:width 100)
	         (label :text "name"
	                :xalign 1
			:width 250)
	       )
	       (for process in proc
		    (box
		     :orientation "h"
		     :space-evenly false
		     :class "cpu-line ${process.key == procEntry ? 'active' : ''}"
		       (label :text "${process.value['%CPU']}"
			      :limit-width 10
	                      :xalign 0
			      :width 100)
		       (label :text "${process.value['%MEM']}"
			      :limit-width 10
	                      :xalign 0
			      :width 100)
		       (label :text "${process.value.USER}"
			      :limit-width 10
	                      :xalign 0
			      :width 100)
		       (label :text "${process.value.COMMAND}"
			      :width 250
	                      :xalign 1
			      :limit-width 25)
		     )
	     ))
	     (box
	      :class "cpu-box cores"
	      :orientation "v"
	      ;; (for core in {jq("${arraylength(EWW_CPU.cores)}", `[range(0; .; 2)]`)} ;; weird error about end of input at 'r' in range
	      (for core in {[0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22]}
	      (box
	       :orientation "h"
	       :class "cpu-box-pair"
	       (overlay
	         (graph
	         :class "cpu-box-graph"
	         :thickness 2.0
	         :value "${EWW_CPU.cores[core].usage}"
	         :time-range "60s"
	         :line-style "round")
	         (label
	          :class "cpu-box-label"
	          :text "${core + 1}"))
	       (overlay
	         (graph
	         :class "cpu-box-graph"
	         :thickness 2.0
	         :value "${EWW_CPU.cores[core+1].usage}"
	         :time-range "120s"
	         :line-style "round")
	         (label
	          :class "cpu-box-label"
	          :text "${core + 2}"))
	         )
	      )
	      )))


(defwidget statusbar-widget [showBattery showTV showMail showCalendar]
	   (box :space-evenly false
		:class "statusbar-box ${colorMode}"
		(workspaces)
		(active-window)
		(box
		     :class "widgets-box box"
		     :space-evenly false
		     :halign "start"
		     (monitor
		      :monitor-width 6
		      :monitor-text "${round(EWW_CPU.avg, 2)}%"
		      :monitor-icon "./assets/cpu.png"
		      :monitor-click "hyprctl dispatch submap eww; eww open cpu --toggle")
		     (monitor
		      :monitor-width 6
		      :monitor-text "${round(EWW_RAM.used_mem_perc, 2)}%"
		      :monitor-icon "./assets/ram.png"))
		(box
		     :class "widgets-box box"
		     :space-evenly false
		     :halign "start"
		     :visible showBattery
		       (monitor
		       :monitor-width 4
		       :monitor-icon "./assets/${EWW_BATTERY != "" ? EWW_BATTERY.BAT0.status : "Charging"}.png"
		       :monitor-text "${EWW_BATTERY != "" ? EWW_BATTERY.BAT0.capacity : "n/a"}%")
		 )
		(box
		     :class "notifications-box box"
		     :space-evenly false
		     :halign "start"
		     (monitor
		      :monitor-width 2
		      :monitor-visible showMail
		      :monitor-text "${mail-important}"
		      :monitor-icon "./assets/mail.png")
		     (monitor
		      :monitor-width 2
		      :monitor-visible showMail
		      :monitor-text "${mail-unread}"
		      :monitor-icon "./assets/envelope.png")
		     (monitor
		      :monitor-width 2
		      :monitor-text "${notifications.text}"
		      :monitor-icon "./assets/notification-${notifications.alt}.png"
		      :monitor-click "swaync-client -t -sw")
		     (monitor
		      :monitor-width 24
		      :monitor-visible showCalendar
		      :monitor-text `${cal.time} ⟨${cal.duration}m⟩ ${cal.title}`
		      :monitor-tooltip "${cal.title}"
		      :monitor-icon `${cal.date == formattime(EWW_TIME, "%Y-%m-%d") ? "./assets/calendar.png" : "./assets/calendar-free.png"}`
		      :monitor-click "eww open events --toggle"
		      :monitor-middleclick "ect dec"
		      :monitor-rclick "ect inc")
		     )
		(media)
		(monitor
		 :monitor-width 0
		 :monitor-class "box"
		 :monitor-text ""
		 :monitor-visible showTV
		 :monitor-icon "./assets/tv-${tvStatus}.png"
		 :monitor-click "~/.config/eww/scripts/toggle-tv.sh")

		(monitor
		:monitor-width 4
		:monitor-class "box"
		:monitor-text "${round(weather?.current?.temp_c, 0)}℃"
		:monitor-icon "${EWW_TIME == '' ? '' : '/home/evie/.config/eww-extras/weather.png'}")
	        (box
	         :class "audio-box box"
	         :halign "start"
	         :orientation "horizontal"
	         :space-evenly false
		 (systray
		  :spacing 1
		  :orientation "horizontal"
		  :space-evenly false
		  :icon-size 20
		  :prepend-new false))
		(system-time)))

(include "/home/evie/.config/eww-extras/windows.yuck")



